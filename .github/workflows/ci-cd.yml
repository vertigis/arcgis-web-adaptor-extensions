name: CI/CD

on:
  push:
    branches:
      - main
      - beta
  pull_request:
    branches:
      - main
      - beta

jobs:
  build:
    runs-on: windows-2022
    outputs:
      version: ${{ steps.gitversion.outputs.majorMinorPatch }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true

      - name: Display GitVersion variables (without prefix)
        run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test

      - name: Create artifact
        run: Compress-Archive -Path (Get-ChildItem -Path bin/release/net6.0/ -Exclude @("*.pdb")) -Destination release.zip

      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: release.zip

  release:
    runs-on: windows-2022
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/beta'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build.outputs.version }}
          release_name: v${{ needs.build.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip